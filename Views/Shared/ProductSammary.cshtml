@*Создадим частичное представление, являющееся фрагментом содержимого,
    которое можно внедрять в другое представление подобно шаблону.*@

@model Product




<div class="card card-outline-primary m-1 p-1">
    <div class="bg-faded p-1">
        <h4>
            @Model.Name
            <span class="badge badge-pill badge-primary" style="float:right">
                <small>@Model.Price.ToString("c")</small>
            </span>
        </h4>
    </div>

    @*Обновлено для включения кнопки AddТоCart*@
    @*<div class="card-text p-1">@Model.Description</div>*@
    @*Мы добавили элемент form, содержащий скрытые элементы input, которые
        устанавливают значение ProductID из модели представления и URL, куда
        браузер должен возвращаться после обновления корзины. Элемент form и
        один из элементов input конфигурируются с использованием встроенных
        вспомогательных функций дескрипторов, что является удобным способом
        генерирования форм, которые содержат значения модели и нацелены на
        контроллеры и действия в приложении. Во втором элементе input применяется
        расширяющий метод, созданный для установки URL возврата. Кроме того,
        добавлен элемент button, который будет отправлять форму приложению.*@

    <form id="@Model.ProductID" asp-action="AddToCart"
          asp-controller="Cart" method="post">
        <input type="hidden" asp-for="ProductID" />
        <input type="hidden" name="returnUrl"
               value="@ViewContext.HttpContext.Request.PathAndQuery()" />
        <span class="card-text p-1">
            @Model.Description
            <button type="submit"
                    class="btn btn-success btn-sm pull-right" style="float: right">
                Add To Cart
            </button>

        </span>

    </form>
</div>




@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
